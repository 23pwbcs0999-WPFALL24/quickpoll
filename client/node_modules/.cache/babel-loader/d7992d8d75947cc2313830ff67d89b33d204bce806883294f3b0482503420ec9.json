{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\quickpoll\\\\client\\\\src\\\\pages\\\\CreatePoll.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/CreatePoll.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePoll() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [options, setOptions] = useState(['', '']);\n  const [message, setMessage] = useState('');\n  const handleOptionChange = (idx, value) => {\n    const newOptions = [...options];\n    newOptions[idx] = value;\n    setOptions(newOptions);\n  };\n  const addOption = () => setOptions([...options, '']);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Your API logic here\n    setMessage('Poll created! (mock)');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-poll-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Poll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"create-poll-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Question:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          required: true,\n          className: \"poll-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-list\",\n        children: options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Option ${idx + 1}`,\n          value: opt,\n          onChange: e => handleOptionChange(idx, e.target.value),\n          required: true,\n          className: \"poll-input\"\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addOption,\n          children: \"Add Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"poll-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePoll, \"vEbvZXRtOacofKfnRRIcL9Eaa7g=\");\n_c = CreatePoll;\nvar _c;\n$RefreshReg$(_c, \"CreatePoll\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreatePoll","_s","question","setQuestion","options","setOptions","message","setMessage","handleOptionChange","idx","value","newOptions","addOption","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","required","map","opt","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/quickpoll/client/src/pages/CreatePoll.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/CreatePoll.css';\r\n\r\nexport default function CreatePoll() {\r\n  const [question, setQuestion] = useState('');\r\n  const [options, setOptions] = useState(['', '']);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleOptionChange = (idx, value) => {\r\n    const newOptions = [...options];\r\n    newOptions[idx] = value;\r\n    setOptions(newOptions);\r\n  };\r\n\r\n  const addOption = () => setOptions([...options, '']);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Your API logic here\r\n    setMessage('Poll created! (mock)');\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-poll-container\">\r\n      <h2>Create Poll</h2>\r\n      <form className=\"create-poll-form\" onSubmit={handleSubmit}>\r\n        <label>\r\n          Question:\r\n          <input\r\n            type=\"text\"\r\n            value={question}\r\n            onChange={e => setQuestion(e.target.value)}\r\n            required\r\n            className=\"poll-input\"\r\n          />\r\n        </label>\r\n        <div className=\"options-list\">\r\n          {options.map((opt, idx) => (\r\n            <input\r\n              key={idx}\r\n              type=\"text\"\r\n              placeholder={`Option ${idx + 1}`}\r\n              value={opt}\r\n              onChange={e => handleOptionChange(idx, e.target.value)}\r\n              required\r\n              className=\"poll-input\"\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"poll-actions\">\r\n          <button type=\"button\" onClick={addOption}>Add Option</button>\r\n          <button type=\"submit\">Create</button>\r\n        </div>\r\n      </form>\r\n      {message && <p className=\"poll-message\">{message}</p>}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}