{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\quickpoll\\\\client\\\\src\\\\pages\\\\PollPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPoll, votePoll } from '../services/api';\nimport '../styles/PollPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PollPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [poll, setPoll] = useState(null);\n  const [selected, setSelected] = useState(null);\n  const [message, setMessage] = useState('');\n  const [voted, setVoted] = useState(false);\n  useEffect(() => {\n    getPoll(id).then(res => setPoll(res.data)).catch(() => setMessage('Poll not found'));\n  }, [id]);\n  const handleVote = async () => {\n    try {\n      await votePoll(id, {\n        optionIndex: selected\n      });\n      setMessage('Thank you for voting!');\n      setVoted(true);\n      // Optionally, refresh poll data if you want to update vote counts\n      // const res = await getPoll(id);\n      // setPoll(res.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage('Error voting: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || ''));\n    }\n  };\n  if (!poll) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-page-container\",\n    children: message || 'Loading poll...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"poll-header\",\n      children: poll.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), !voted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-list\",\n        children: poll.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-btn ${selected === idx ? 'selected' : ''}`,\n          onClick: () => setSelected(idx),\n          children: opt.text\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"vote-btn\",\n        onClick: handleVote,\n        disabled: selected === null,\n        children: \"Vote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thank-you-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"thanks\",\n        children: \"\\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), \" Thank you for voting!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"poll-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(PollPage, \"BDJyRqc2u+9dGq0rys53xYbIFXs=\", false, function () {\n  return [useParams];\n});\n_c = PollPage;\nvar _c;\n$RefreshReg$(_c, \"PollPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getPoll","votePoll","jsxDEV","_jsxDEV","Fragment","_Fragment","PollPage","_s","id","poll","setPoll","selected","setSelected","message","setMessage","voted","setVoted","then","res","data","catch","handleVote","optionIndex","err","_err$response","_err$response$data","response","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","opt","idx","onClick","text","disabled","role","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/quickpoll/client/src/pages/PollPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getPoll, votePoll } from '../services/api';\r\nimport '../styles/PollPage.css';\r\n\r\nexport default function PollPage() {\r\n  const { id } = useParams();\r\n\r\n  const [poll, setPoll] = useState(null);\r\n  const [selected, setSelected] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [voted, setVoted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getPoll(id)\r\n      .then(res => setPoll(res.data))\r\n      .catch(() => setMessage('Poll not found'));\r\n  }, [id]);\r\n\r\n  const handleVote = async () => {\r\n    try {\r\n      await votePoll(id, { optionIndex: selected });\r\n      setMessage('Thank you for voting!');\r\n      setVoted(true);\r\n      // Optionally, refresh poll data if you want to update vote counts\r\n      // const res = await getPoll(id);\r\n      // setPoll(res.data);\r\n    } catch (err) {\r\n      setMessage('Error voting: ' + (err.response?.data?.error || ''));\r\n    }\r\n  };\r\n\r\n  if (!poll) return <div className=\"poll-page-container\">{message || 'Loading poll...'}</div>;\r\n\r\n  return (\r\n    <div className=\"poll-page-container\">\r\n      <h2 className=\"poll-header\">{poll.question}</h2>\r\n      {!voted ? (\r\n        <>\r\n          <div className=\"options-list\">\r\n            {poll.options.map((opt, idx) => (\r\n              <button\r\n                key={idx}\r\n                className={`option-btn ${selected === idx ? 'selected' : ''}`}\r\n                onClick={() => setSelected(idx)}\r\n              >\r\n                {opt.text}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <button className=\"vote-btn\" onClick={handleVote} disabled={selected === null}>\r\n            Vote\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <div className=\"thank-you-message\">\r\n          <span role=\"img\" aria-label=\"thanks\">ðŸŽ‰</span> Thank you for voting!\r\n        </div>\r\n      )}\r\n      {message && <p className=\"poll-message\">{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}