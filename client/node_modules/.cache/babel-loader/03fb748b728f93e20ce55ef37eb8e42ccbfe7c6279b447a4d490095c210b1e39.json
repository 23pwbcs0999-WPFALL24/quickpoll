{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\quickpoll\\\\client\\\\src\\\\components\\\\PollResults.js\";\n// client/src/components/PollResults.js\nimport './PollResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollResults = ({\n  options,\n  totalVotes\n}) => {\n  // Calculate total votes if not provided\n  const calculatedTotal = totalVotes || options.reduce((sum, option) => sum + option.votes, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"results-list\",\n      children: options.map((option, index) => {\n        const percentage = calculatedTotal > 0 ? Math.round(option.votes / calculatedTotal * 100) : 0;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"result-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"option-text\",\n              children: option.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"vote-count\",\n              children: [option.votes, \" votes (\", percentage, \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              style: {\n                width: `${percentage}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = PollResults;\nexport default PollResults;\nvar _c;\n$RefreshReg$(_c, \"PollResults\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","PollResults","options","totalVotes","calculatedTotal","reduce","sum","option","votes","className","children","map","index","percentage","Math","round","text","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/quickpoll/client/src/components/PollResults.js"],"sourcesContent":["// client/src/components/PollResults.js\r\nimport './PollResults.css';\r\n\r\nconst PollResults = ({ options, totalVotes }) => {\r\n  // Calculate total votes if not provided\r\n  const calculatedTotal = totalVotes || \r\n    options.reduce((sum, option) => sum + option.votes, 0);\r\n\r\n  return (\r\n    <div className=\"results-container\">\r\n      <ul className=\"results-list\">\r\n        {options.map((option, index) => {\r\n          const percentage = calculatedTotal > 0 \r\n            ? Math.round((option.votes / calculatedTotal) * 100) \r\n            : 0;\r\n            \r\n          return (\r\n            <li key={index} className=\"result-item\">\r\n              <div className=\"option-info\">\r\n                <span className=\"option-text\">{option.text}</span>\r\n                <span className=\"vote-count\">{option.votes} votes ({percentage}%)</span>\r\n              </div>\r\n              <div className=\"progress-bar-container\">\r\n                <div \r\n                  className=\"progress-bar\" \r\n                  style={{ width: `${percentage}%` }}\r\n                ></div>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollResults;\r\n"],"mappings":";AAAA;AACA,OAAO,mBAAmB;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAC/C;EACA,MAAMC,eAAe,GAAGD,UAAU,IAChCD,OAAO,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAKD,GAAG,GAAGC,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;EAExD,oBACER,OAAA;IAAKS,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChCV,OAAA;MAAIS,SAAS,EAAC,cAAc;MAAAC,QAAA,EACzBR,OAAO,CAACS,GAAG,CAAC,CAACJ,MAAM,EAAEK,KAAK,KAAK;QAC9B,MAAMC,UAAU,GAAGT,eAAe,GAAG,CAAC,GAClCU,IAAI,CAACC,KAAK,CAAER,MAAM,CAACC,KAAK,GAAGJ,eAAe,GAAI,GAAG,CAAC,GAClD,CAAC;QAEL,oBACEJ,OAAA;UAAgBS,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACrCV,OAAA;YAAKS,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BV,OAAA;cAAMS,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAEH,MAAM,CAACS;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAClDpB,OAAA;cAAMS,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAEH,MAAM,CAACC,KAAK,EAAC,UAAQ,EAACK,UAAU,EAAC,IAAE;YAAA;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrE,CAAC,eACNpB,OAAA;YAAKS,SAAS,EAAC,wBAAwB;YAAAC,QAAA,eACrCV,OAAA;cACES,SAAS,EAAC,cAAc;cACxBY,KAAK,EAAE;gBAAEC,KAAK,EAAE,GAAGT,UAAU;cAAI;YAAE;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA,GAVCR,KAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWV,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACG,EAAA,GA/BItB,WAAW;AAiCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}