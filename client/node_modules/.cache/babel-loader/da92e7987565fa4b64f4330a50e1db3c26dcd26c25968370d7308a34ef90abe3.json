{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\quickpoll\\\\client\\\\src\\\\context\\\\PollContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PollContext = /*#__PURE__*/createContext();\nexport const PollProvider = ({\n  children\n}) => {\n  _s();\n  const [recentPolls, setRecentPolls] = useState([]);\n\n  // Load polls from localStorage on initial load\n  useEffect(() => {\n    const storedPolls = localStorage.getItem('recentPolls');\n    if (storedPolls) {\n      setRecentPolls(JSON.parse(storedPolls));\n    }\n  }, []);\n\n  // Save polls to localStorage whenever recentPolls changes\n  useEffect(() => {\n    localStorage.setItem('recentPolls', JSON.stringify(recentPolls));\n  }, [recentPolls]);\n  return /*#__PURE__*/_jsxDEV(PollContext.Provider, {\n    value: {\n      recentPolls,\n      setRecentPolls\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(PollProvider, \"VvsMscQ26Uilm3uJnyP46LvUAa0=\");\n_c = PollProvider;\nvar _c;\n$RefreshReg$(_c, \"PollProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","PollContext","PollProvider","children","_s","recentPolls","setRecentPolls","storedPolls","localStorage","getItem","JSON","parse","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/quickpoll/client/src/context/PollContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const PollContext = createContext();\r\n\r\nexport const PollProvider = ({ children }) => {\r\n  const [recentPolls, setRecentPolls] = useState([]);\r\n\r\n  // Load polls from localStorage on initial load\r\n  useEffect(() => {\r\n    const storedPolls = localStorage.getItem('recentPolls');\r\n    if (storedPolls) {\r\n      setRecentPolls(JSON.parse(storedPolls));\r\n    }\r\n  }, []);\r\n\r\n  // Save polls to localStorage whenever recentPolls changes\r\n  useEffect(() => {\r\n    localStorage.setItem('recentPolls', JSON.stringify(recentPolls));\r\n  }, [recentPolls]);\r\n\r\n  return (\r\n    <PollContext.Provider value={{ recentPolls, setRecentPolls }}>\r\n      {children}\r\n    </PollContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACvD,IAAIF,WAAW,EAAE;MACfD,cAAc,CAACI,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC;IACzC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACI,OAAO,CAAC,aAAa,EAAEF,IAAI,CAACG,SAAS,CAACR,WAAW,CAAC,CAAC;EAClE,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACEL,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,WAAW;MAAEC;IAAe,CAAE;IAAAH,QAAA,EAC1DA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,EAAA,CArBWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}