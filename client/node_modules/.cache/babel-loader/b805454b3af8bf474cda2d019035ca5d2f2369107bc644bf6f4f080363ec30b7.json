{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\quickpoll\\\\client\\\\src\\\\pages\\\\CreatePoll.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createPoll } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePoll() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [options, setOptions] = useState(['', '']);\n  const [message, setMessage] = useState('');\n  const handleOptionChange = (idx, value) => {\n    const newOptions = [...options];\n    newOptions[idx] = value;\n    setOptions(newOptions);\n  };\n  const addOption = () => setOptions([...options, '']);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await createPoll({\n        question,\n        options\n      });\n      setMessage('Poll created! ID: ' + res.data.pollId);\n    } catch (err) {\n      setMessage('Error creating poll');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Poll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Poll question\",\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Option ${idx + 1}`,\n        value: opt,\n        onChange: e => handleOptionChange(idx, e.target.value),\n        required: true\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addOption,\n        children: \"Add Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePoll, \"vEbvZXRtOacofKfnRRIcL9Eaa7g=\");\n_c = CreatePoll;\nvar _c;\n$RefreshReg$(_c, \"CreatePoll\");","map":{"version":3,"names":["React","useState","createPoll","jsxDEV","_jsxDEV","CreatePoll","_s","question","setQuestion","options","setOptions","message","setMessage","handleOptionChange","idx","value","newOptions","addOption","handleSubmit","e","preventDefault","res","data","pollId","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","required","map","opt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/quickpoll/client/src/pages/CreatePoll.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createPoll } from '../services/api';\r\n\r\nexport default function CreatePoll() {\r\n  const [question, setQuestion] = useState('');\r\n  const [options, setOptions] = useState(['', '']);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleOptionChange = (idx, value) => {\r\n    const newOptions = [...options];\r\n    newOptions[idx] = value;\r\n    setOptions(newOptions);\r\n  };\r\n\r\n  const addOption = () => setOptions([...options, '']);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await createPoll({ question, options });\r\n      setMessage('Poll created! ID: ' + res.data.pollId);\r\n    } catch (err) {\r\n      setMessage('Error creating poll');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create Poll</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Poll question\"\r\n          value={question}\r\n          onChange={e => setQuestion(e.target.value)}\r\n          required\r\n        />\r\n        {options.map((opt, idx) => (\r\n          <input\r\n            key={idx}\r\n            type=\"text\"\r\n            placeholder={`Option ${idx + 1}`}\r\n            value={opt}\r\n            onChange={e => handleOptionChange(idx, e.target.value)}\r\n            required\r\n          />\r\n        ))}\r\n        <button type=\"button\" onClick={addOption}>Add Option</button>\r\n        <button type=\"submit\">Create</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}