{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\quickpoll\\\\client\\\\src\\\\pages\\\\PollResultsPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PollResults from '../components/PollResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollResultsPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [poll, setPoll] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchPoll = async () => {\n      try {\n        const res = await fetch(`/api/polls/${id}`);\n        if (!res.ok) throw new Error('Poll not found');\n        const data = await res.json();\n        setPoll(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPoll();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  if (error || !poll) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error || 'Poll not found'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Poll Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PollResults, {\n      options: poll.options,\n      totalVotes: poll.totalVotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(PollResultsPage, \"dSJyiENqeprfNxRp8uUHOf0NGFA=\", false, function () {\n  return [useParams];\n});\n_c = PollResultsPage;\nexport default PollResultsPage;\nvar _c;\n$RefreshReg$(_c, \"PollResultsPage\");","map":{"version":3,"names":["useEffect","useState","useParams","PollResults","jsxDEV","_jsxDEV","PollResultsPage","_s","id","poll","setPoll","loading","setLoading","error","setError","fetchPoll","res","fetch","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","totalVotes","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/quickpoll/client/src/pages/PollResultsPage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PollResults from '../components/PollResults';\r\n\r\nconst PollResultsPage = () => {\r\n  const { id } = useParams();\r\n  const [poll, setPoll] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchPoll = async () => {\r\n      try {\r\n        const res = await fetch(`/api/polls/${id}`);\r\n        if (!res.ok) throw new Error('Poll not found');\r\n        const data = await res.json();\r\n        setPoll(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPoll();\r\n  }, [id]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error || !poll) return <div>{error || 'Poll not found'}</div>;\r\n\r\n  return (\r\n    <div className=\"results-page\">\r\n      <h2>Poll Results</h2>\r\n      <PollResults options={poll.options} totalVotes={poll.totalVotes} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollResultsPage;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,cAAcT,EAAE,EAAE,CAAC;QAC3C,IAAI,CAACQ,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;QAC9C,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;QAC7BX,OAAO,CAACU,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRX,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,IAAIG,OAAO,EAAE,oBAAON,OAAA;IAAAmB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIf,KAAK,IAAI,CAACJ,IAAI,EAAE,oBAAOJ,OAAA;IAAAmB,QAAA,EAAMX,KAAK,IAAI;EAAgB;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEjE,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,cAAc;IAAAL,QAAA,gBAC3BnB,OAAA;MAAAmB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBvB,OAAA,CAACF,WAAW;MAAC2B,OAAO,EAAErB,IAAI,CAACqB,OAAQ;MAACC,UAAU,EAAEtB,IAAI,CAACsB;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhCID,eAAe;EAAA,QACJJ,SAAS;AAAA;AAAA8B,EAAA,GADpB1B,eAAe;AAkCrB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}