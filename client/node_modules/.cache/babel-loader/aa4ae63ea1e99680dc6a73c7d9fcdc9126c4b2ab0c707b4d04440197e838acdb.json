{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useSocket}from'../context/SocketContext';import'./PollResults.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PollResults=_ref=>{let{options:initialOptions,pollId}=_ref;const socket=useSocket();// ✅ pull in the socket instance\nconst[options,setOptions]=useState(initialOptions);// Calculate total votes\nconst totalVotes=options.reduce((sum,opt)=>sum+opt.votes,0);useEffect(()=>{if(!socket||!pollId)return;// Join the room for this poll\nsocket.emit('joinPoll',pollId);// Listen for updates\nsocket.on('voteUpdate',updatedPoll=>{// updatedPoll should be the full poll object\nif(updatedPoll.options){setOptions(updatedPoll.options);}});// Cleanup on unmount\nreturn()=>{socket.off('voteUpdate');socket.emit('leavePoll',pollId);};},[socket,pollId]);return/*#__PURE__*/_jsx(\"div\",{className:\"results-container\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"results-list\",children:options.map((option,idx)=>{const pct=totalVotes>0?Math.round(option.votes/totalVotes*100):0;return/*#__PURE__*/_jsxs(\"li\",{className:\"result-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"option-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"option-text\",children:option.text}),/*#__PURE__*/_jsxs(\"span\",{className:\"vote-count\",children:[option.votes,\" votes (\",pct,\"%)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{width:`${pct}%`}})})]},idx);})})});};export default PollResults;","map":{"version":3,"names":["React","useEffect","useState","useSocket","jsx","_jsx","jsxs","_jsxs","PollResults","_ref","options","initialOptions","pollId","socket","setOptions","totalVotes","reduce","sum","opt","votes","emit","on","updatedPoll","off","className","children","map","option","idx","pct","Math","round","text","style","width"],"sources":["C:/Users/user/Desktop/quickpoll/client/src/components/PollResults.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSocket } from '../context/SocketContext';\r\nimport './PollResults.css';\r\n\r\nconst PollResults = ({ options: initialOptions, pollId }) => {\r\n  const socket = useSocket();           // ✅ pull in the socket instance\r\n  const [options, setOptions] = useState(initialOptions);\r\n\r\n  // Calculate total votes\r\n  const totalVotes = options.reduce((sum, opt) => sum + opt.votes, 0);\r\n\r\n  useEffect(() => {\r\n    if (!socket || !pollId) return;\r\n\r\n    // Join the room for this poll\r\n    socket.emit('joinPoll', pollId);\r\n\r\n    // Listen for updates\r\n    socket.on('voteUpdate', (updatedPoll) => {\r\n      // updatedPoll should be the full poll object\r\n      if (updatedPoll.options) {\r\n        setOptions(updatedPoll.options);\r\n      }\r\n    });\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      socket.off('voteUpdate');\r\n      socket.emit('leavePoll', pollId);\r\n    };\r\n  }, [socket, pollId]);\r\n\r\n  return (\r\n    <div className=\"results-container\">\r\n      <ul className=\"results-list\">\r\n        {options.map((option, idx) => {\r\n          const pct = totalVotes > 0\r\n            ? Math.round((option.votes / totalVotes) * 100)\r\n            : 0;\r\n\r\n          return (\r\n            <li key={idx} className=\"result-item\">\r\n              <div className=\"option-info\">\r\n                <span className=\"option-text\">{option.text}</span>\r\n                <span className=\"vote-count\">\r\n                  {option.votes} votes ({pct}%)\r\n                </span>\r\n              </div>\r\n              <div className=\"progress-bar-container\">\r\n                <div\r\n                  className=\"progress-bar\"\r\n                  style={{ width: `${pct}%` }}\r\n                ></div>\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollResults;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,0BAA0B,CACpD,MAAO,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3B,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAyC,IAAxC,CAAEC,OAAO,CAAEC,cAAc,CAAEC,MAAO,CAAC,CAAAH,IAAA,CACtD,KAAM,CAAAI,MAAM,CAAGV,SAAS,CAAC,CAAC,CAAY;AACtC,KAAM,CAACO,OAAO,CAAEI,UAAU,CAAC,CAAGZ,QAAQ,CAACS,cAAc,CAAC,CAEtD;AACA,KAAM,CAAAI,UAAU,CAAGL,OAAO,CAACM,MAAM,CAAC,CAACC,GAAG,CAAEC,GAAG,GAAKD,GAAG,CAAGC,GAAG,CAACC,KAAK,CAAE,CAAC,CAAC,CAEnElB,SAAS,CAAC,IAAM,CACd,GAAI,CAACY,MAAM,EAAI,CAACD,MAAM,CAAE,OAExB;AACAC,MAAM,CAACO,IAAI,CAAC,UAAU,CAAER,MAAM,CAAC,CAE/B;AACAC,MAAM,CAACQ,EAAE,CAAC,YAAY,CAAGC,WAAW,EAAK,CACvC;AACA,GAAIA,WAAW,CAACZ,OAAO,CAAE,CACvBI,UAAU,CAACQ,WAAW,CAACZ,OAAO,CAAC,CACjC,CACF,CAAC,CAAC,CAEF;AACA,MAAO,IAAM,CACXG,MAAM,CAACU,GAAG,CAAC,YAAY,CAAC,CACxBV,MAAM,CAACO,IAAI,CAAC,WAAW,CAAER,MAAM,CAAC,CAClC,CAAC,CACH,CAAC,CAAE,CAACC,MAAM,CAAED,MAAM,CAAC,CAAC,CAEpB,mBACEP,IAAA,QAAKmB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChCpB,IAAA,OAAImB,SAAS,CAAC,cAAc,CAAAC,QAAA,CACzBf,OAAO,CAACgB,GAAG,CAAC,CAACC,MAAM,CAAEC,GAAG,GAAK,CAC5B,KAAM,CAAAC,GAAG,CAAGd,UAAU,CAAG,CAAC,CACtBe,IAAI,CAACC,KAAK,CAAEJ,MAAM,CAACR,KAAK,CAAGJ,UAAU,CAAI,GAAG,CAAC,CAC7C,CAAC,CAEL,mBACER,KAAA,OAAciB,SAAS,CAAC,aAAa,CAAAC,QAAA,eACnClB,KAAA,QAAKiB,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BpB,IAAA,SAAMmB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEE,MAAM,CAACK,IAAI,CAAO,CAAC,cAClDzB,KAAA,SAAMiB,SAAS,CAAC,YAAY,CAAAC,QAAA,EACzBE,MAAM,CAACR,KAAK,CAAC,UAAQ,CAACU,GAAG,CAAC,IAC7B,EAAM,CAAC,EACJ,CAAC,cACNxB,IAAA,QAAKmB,SAAS,CAAC,wBAAwB,CAAAC,QAAA,cACrCpB,IAAA,QACEmB,SAAS,CAAC,cAAc,CACxBS,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAGL,GAAG,GAAI,CAAE,CACxB,CAAC,CACJ,CAAC,GAZCD,GAaL,CAAC,CAET,CAAC,CAAC,CACA,CAAC,CACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAApB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}